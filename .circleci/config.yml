# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      DATABASE_URL: jdbc:postgresql://localhost:5432/squad3
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres

    steps:
      - checkout
      
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client
      - run:
          command: |
              psql -h localhost -U postgres -c "CREATE DATABASE squad3;"

      # Download and cache dependencies
      - restore_cache:
          key: squad3-challenge-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: squad3-challenge-{{ checksum "pom.xml" }}
          
      - run: mvn package

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports
      
      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/squad3-challenge-0.1-SNAPSHOT.jar
